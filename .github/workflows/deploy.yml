name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short commit SHA
        id: vars
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build and push Docker image with commit SHA
        run: |
          docker build -t andreyzuikov/mobackend:${GITHUB_SHA} .
          docker push andreyzuikov/mobackend:${GITHUB_SHA}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up Yandex Cloud CLI
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          mkdir -p ~/.config/yandex-cloud
          echo "${{ secrets.YC_CREDENTIALS }}" > ~/.config/yandex-cloud/credentials.json

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: |
          yc managed-kubernetes cluster get-credentials --id cat6mq8u5ndujs9rqrde --external

      - name: Apply Kubernetes Secrets
        run: |
          kubectl create secret generic db-secrets \
            --from-literal=redis_connection=${{ secrets.REDIS_CONNECTION }} \
            --from-literal=redis_host=${{ secrets.REDIS_HOST }} \
            --from-literal=redis_password=${{ secrets.REDIS_PASSWORD }} \
            --from-literal=redis_port=${{ secrets.REDIS_PORT }} \
            --from-literal=database_user=${{ secrets.DATABASE_USER }} \
            --from-literal=database_password=${{ secrets.DATABASE_PASSWORD }} \
            --from-literal=database_name=${{ secrets.DATABASE_NAME }} \
            --from-literal=database_host=${{ secrets.DATABASE_HOST }} \
            --from-literal=database_port=${{ secrets.DATABASE_PORT }} \
            --from-literal=bot_token=${{ secrets.BOT_TOKEN }} \
            --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl create secret generic jwt-secrets \
            --from-literal=jwt_secret=${{ secrets.JWT_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
